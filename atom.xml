<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech blog of Unicooo</title>
  <subtitle>by unicooo</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://windsooon.github.io/"/>
  <updated>2019-06-20T03:18:26.929Z</updated>
  <id>https://windsooon.github.io/</id>
  
  <author>
    <name>Unicooo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A crash course in cache</title>
    <link href="https://windsooon.github.io/2019/06/13/A%20crash%20course%20in%20cache/"/>
    <id>https://windsooon.github.io/2019/06/13/A crash course in cache/</id>
    <published>2019-06-13T12:57:00.000Z</published>
    <updated>2019-06-20T03:18:26.929Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Different-level-of-Caches&quot;&gt;&lt;a href=&quot;#Different-level-of-Caches&quot; class=&quot;headerlink&quot; title=&quot;Different level of Caches&quot;&gt;&lt;/a&gt;Different level of Caches&lt;/h3&gt;&lt;p&gt;Even though the computer &lt;a href=&quot;https://computers-are-fast.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;run much faster&lt;/a&gt; then we expected nowadays, &lt;a href=&quot;https://gist.github.com/jboner/2841832#file-latency-txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the speed between the different components are still very large&lt;/a&gt;. To solve this problem, we introduce different levels of caches. After access the data from storage, we store the most used (temporal locality) and the nearby data (spatial locality) in the current lever so we can aceesee them directly later. The term &lt;strong&gt;storage&lt;/strong&gt; here is relative. For example, main memory is a storage to CPU cache, and the disk is a storage to main memory. When running a program, it may reach several levels of caches. Let’s look closer to it:&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/cache_level.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;CPU-cache&quot;&gt;&lt;a href=&quot;#CPU-cache&quot; class=&quot;headerlink&quot; title=&quot;CPU cache&quot;&gt;&lt;/a&gt;CPU cache&lt;/h4&gt;&lt;p&gt;CPU built a pyramid-like cache architecture, each of them keeps a small piece of data and instructions in it.&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/cpu_cache.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Every data or instruction form different kinds of applications may cache by the CPU cache which programmers can’t control. For more details, you may have a look at &lt;a href=&quot;https://www.extremetech.com/extreme/188776-how-l1-and-l2-cpu-caches-work-and-why-theyre-an-essential-part-of-modern-chips&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How L1 and L2 CPU Caches Work&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;User-cache&quot;&gt;&lt;a href=&quot;#User-cache&quot; class=&quot;headerlink&quot; title=&quot;User cache&quot;&gt;&lt;/a&gt;User cache&lt;/h4&gt;&lt;p&gt;Generally speaking, User cache is the most used cache form programmers. When we use a hashmap or dictionary to store some data for future use. User cache comes to our eyes. Here is a Python example to use cache or not for calculating the nth Fibonacci numbers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# code without cache
def fibonacci(n):
    if n &amp;lt;= 1:
        return n
    return fibonacci(n-2) + fibonacci(n-1)

# code with cache
dic = {}
def fibonacci(n):
    if n in dic:
        return dic[n]
    if n &amp;lt;= 1:
        return n
    dic[n] = fibonacci(n-2) + fibonacci(n-1)
    return dic[n]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With the help of the User cache, the time complexity of this problem drop from O(2**n) to O(n) which save a huge of time when n is large.&lt;/p&gt;
&lt;h4 id=&quot;Program-languages-cache&quot;&gt;&lt;a href=&quot;#Program-languages-cache&quot; class=&quot;headerlink&quot; title=&quot;Program languages cache&quot;&gt;&lt;/a&gt;Program languages cache&lt;/h4&gt;&lt;p&gt;Since calling system call like read() or write() repeatedly in user space is expensive, some program languages try to avoid this by keeping a small piece of cache inside. The I/O module in Python use a small buffer (8 &lt;em&gt; 1024 bytes by default) to store some temporary data. When we try to read some data from &lt;/em&gt;f* using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Python code
f.read(10)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Python will search the data from its read buffer to see if the data already in it before calling a raw system call read(), we will show more details in the later capter.&lt;/p&gt;
&lt;h4 id=&quot;OS-cache&quot;&gt;&lt;a href=&quot;#OS-cache&quot; class=&quot;headerlink&quot; title=&quot;OS cache&quot;&gt;&lt;/a&gt;OS cache&lt;/h4&gt;&lt;p&gt;Disk I/O may be the slowest part of our computer. Therefore, after access the data from the disk, the OS system will keep the hotspot data (Which its size is dynamic) in main memory (In Linux, it called Page cache). Moreover, we can use a mechanism called virtual memory to swap this data to disk temporary if not enough main memory is available now.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux supports virtual memory, that is, using a disk as an extension of RAM so that the effective size of usable memory grows correspondingly. The kernel will write the contents of a currently unused block of memory to the hard disk so that the memory can be used for another purpose. When the original contents are needed again, they are read back into memory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Disk-buffer&quot;&gt;&lt;a href=&quot;#Disk-buffer&quot; class=&quot;headerlink&quot; title=&quot;Disk buffer&quot;&gt;&lt;/a&gt;Disk buffer&lt;/h4&gt;&lt;p&gt;Disk also has its &lt;a href=&quot;https://en.wikipedia.org/wiki/Disk_buffer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;own way&lt;/a&gt; to speed up. Even though we use fsync() in our code, it doesn’t mean the data already written to the disk safely.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Calling fsync() does not necessarily ensure that the entry in the&lt;br&gt;directory containing the file has also reached disk.  For that an&lt;br&gt;explicit fsync() on a file descriptor for the directory is also&lt;br&gt;needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Different-kind-of-caches-lookup&quot;&gt;&lt;a href=&quot;#Different-kind-of-caches-lookup&quot; class=&quot;headerlink&quot; title=&quot;Different kind of caches lookup&quot;&gt;&lt;/a&gt;Different kind of caches lookup&lt;/h3&gt;&lt;p&gt;The data search policy in cache is quite straightforward. We search the data from the top to the bottom. Let’s dive into the deep to see how a computer actually looks up the data in the cache. There is three popular way to do this nowadays. &lt;strong&gt;Set Associative, Fully Associative and Direct Mapped&lt;/strong&gt;. Luckily, the last two just a special case of Set Associative (Direct Mapped ≈ 1-way set Associative, Fully Associative ≈ N-way set associative). Here is a small 256 bytes cache which divides by four lines, every line contains 64 bytes (We call it 2-way 2 set associative because we have 2 sets and each set contains 2 lines in the cache).&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/set_cache.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;When we want to read data from OxFF01 (Ob1111111100000001 in binary), First we divide the address into a different part&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/address.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The first part is the &lt;strong&gt;tag number&lt;/strong&gt;, every line in the cache also has its own tag number, when the tag number in the address matches the one in the cache, that means we found the correct address to read/write data. The second part is &lt;strong&gt;set index&lt;/strong&gt; used to identify which set the address belongs to. The last part is the &lt;strong&gt;data offset&lt;/strong&gt; in the line. The search policy is quite simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Search the set in the cache depend on the address’s set index ( which is 0 in this case).&lt;/li&gt;
&lt;li&gt;Search if the tag number in the lines belongs to the set. If yes, (in our case cache hit) return the data depends on data offset. If no, cache miss.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We used a 2-way 2 sets associative in this example, Can we do better than it? Well, first let’s imagine, if we only use one set for the cache. &lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/one_set.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;we have to compare the tag number in each line from the top to bottom which would be slow in large cache. This is how Fully Associative works. Second, it looks like the search would be faster with more and more set. How about we create n set which n equals to the number of lines.&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;margin: 60px;&quot; src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/cache/n_set.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Great idea! This leads us to Direct Mapped, Direct Mapped is the quickest way to search data in the cache. However, there is a problem here, as we know, the cache is always smaller than the storage. If the storage is 10 times bigger than the cache. 10 locations in the storage will map to the same location. When we write data to the location, there is a high probability that we have to overwrite other useful data which map to the same lines. The problem will get worse when the storage is much bigger than the cache. &lt;/p&gt;
&lt;p&gt;Set associative is a tradeoff, Set associative use multiple sets to narrow the search range, in the example, When we use 4 sets, we can do a search inside the set 0 which would be 4 times faster then Fully Associative. When we write the data to the cache, we can just write the data to the same set reduce conflict.&lt;/p&gt;
&lt;h3 id=&quot;Cache-Policy&quot;&gt;&lt;a href=&quot;#Cache-Policy&quot; class=&quot;headerlink&quot; title=&quot;Cache Policy&quot;&gt;&lt;/a&gt;Cache Policy&lt;/h3&gt;&lt;p&gt;When we found the data in the cache, we call it cache hit, otherwise cache miss. The computer also has to decide what should do after a cache miss.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;x&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;cache miss&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Read through&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;read data from storage, update the cache, return data to caller&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Write through&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;write data to the cache and the storange&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Write Around&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;write data to the storage directly&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Write back&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;writes data to the cache, marking them as dirty, after some delay, it writes the data back to the storange&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Different-level-of-Caches&quot;&gt;&lt;a href=&quot;#Different-level-of-Caches&quot; class=&quot;headerlink&quot; title=&quot;Different level of Caches&quot;&gt;&lt;/a&gt;Different l
    
    </summary>
    
    
      <category term="cache, python" scheme="https://windsooon.github.io/tags/cache-python/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s talk about Newton&#39;s method (to be finished)</title>
    <link href="https://windsooon.github.io/2019/04/19/Let's%20talk%20about%20Newton's%20method/"/>
    <id>https://windsooon.github.io/2019/04/19/Let's talk about Newton's method/</id>
    <published>2019-04-19T12:57:00.000Z</published>
    <updated>2019-06-19T05:33:04.514Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;p&gt;When I try to &lt;a href=&quot;https://leetcode.com/Windson/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;solve some Leetcode questions&lt;/a&gt; like &lt;a href=&quot;https://leetcode.com/problems/valid-perfect-square/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Valid Perfect Square&lt;/a&gt; and &lt;a href=&quot;https://leetcode.com/problems/sqrtx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sqrt(x)&lt;/a&gt; I found some discuss mention about Newton’s method. We use this method to find the root of a equation close enough. I guess I learned that in my college but I totally forgot. In this article I will explain it in the hard way.&lt;/p&gt;
&lt;h3 id=&quot;What-Newton’s-method-for&quot;&gt;&lt;a href=&quot;#What-Newton’s-method-for&quot; class=&quot;headerlink&quot; title=&quot;What Newton’s method for&quot;&gt;&lt;/a&gt;What Newton’s method for&lt;/h3&gt;&lt;p&gt;When we want to solve an equation, sometimes it’s very find the answer. For instance, &lt;code&gt;y = x - 6&lt;/code&gt;, you can see when x equal to 6, we can get the expect answer. Sometims it’s kinda hard. &lt;code&gt;y = x*x - x - 10&lt;/code&gt;, you can still use formula to find the answer. But sometims pretty hard like &lt;code&gt;x*x*x*x - 3*x*x + 10&lt;/code&gt;. Ususally we can use binary search to find the approximated answer which it is quite useful, we all know that binary search is not that easy to write it correctly. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;&quot; alt=&quot;function&quot;&gt;&lt;/p&gt;
&lt;p&gt;We guess the answer, then we apporch it step by step.&lt;/p&gt;
&lt;h3 id=&quot;How-it-works&quot;&gt;&lt;a href=&quot;#How-it-works&quot; class=&quot;headerlink&quot; title=&quot;How it works&quot;&gt;&lt;/a&gt;How it works&lt;/h3&gt;&lt;p&gt;We have a function &lt;code&gt;x*x-4=0&lt;/code&gt; and we don’t know x, so we choose &lt;code&gt;4&lt;/code&gt; as the first answer then move to the correct answer. (we will show you why we choose 4 here and how we move to the correct answer later). &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;p&gt;When I try to &lt;a href=&quot;https://leetcode.com/Windson/&quot; targ
    
    </summary>
    
    
      <category term="math leetcode" scheme="https://windsooon.github.io/tags/math-leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Why we should hire open source contributors</title>
    <link href="https://windsooon.github.io/2018/09/25/Why%20we%20should%20hire%20open%20source%20contributors/"/>
    <id>https://windsooon.github.io/2018/09/25/Why we should hire open source contributors/</id>
    <published>2018-09-25T13:57:00.000Z</published>
    <updated>2018-09-25T16:45:45.339Z</updated>
    
    <content type="html">&lt;p&gt;I launched &lt;a href=&quot;https://www.osjobs.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Open Source Jobs&lt;/a&gt; a week ago to let enterprises hire open source contributors, why I’m doing this?&lt;/p&gt;
&lt;h3 id=&quot;Hiring-is-really-hard&quot;&gt;&lt;a href=&quot;#Hiring-is-really-hard&quot; class=&quot;headerlink&quot; title=&quot;Hiring is really hard&quot;&gt;&lt;/a&gt;Hiring is really hard&lt;/h3&gt;&lt;h4 id=&quot;Suitable-candidates-are-hard-to-find&quot;&gt;&lt;a href=&quot;#Suitable-candidates-are-hard-to-find&quot; class=&quot;headerlink&quot; title=&quot;Suitable candidates are hard to find&quot;&gt;&lt;/a&gt;Suitable candidates are hard to find&lt;/h4&gt;&lt;p&gt;I spent 2.5 years in a startup as a software engineer, we have 15 engineers and we proud of our products. Like other companies, we desire to hire the best engineers. But hiring is really hard, I remember a popular article in &lt;a href=&quot;https://danluu.com/programmer-moneyball/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HN&lt;/a&gt;, the article quoted from &lt;a href=&quot;https://news.ycombinator.com/item?id=11290662&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thomas Ptacek&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My experience is that running a hiring process that lights up only on the kind of talent that qualifies itself with a standard tech interview is ludicrously expensive. People that do well in standard tech interviews can work anywhere they want. If you can only hire those people, you are competing for talent with the wealthiest (or most overfunded) tech companies in the market.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the last two years, &lt;strong&gt;we only received 3 resumes from top schools and 2 resumes from top companies&lt;/strong&gt;, we know why.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Strong background candidates prefer to work for a big enterprise instead of a startup.&lt;/li&gt;
&lt;li&gt;We can’t offer a better salary/benefits than the big enterprise.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It’s easy to lose in this competition. &lt;/p&gt;
&lt;h4 id=&quot;It’s-hard-to-judge-candidates-in-several-rounds-interview&quot;&gt;&lt;a href=&quot;#It’s-hard-to-judge-candidates-in-several-rounds-interview&quot; class=&quot;headerlink&quot; title=&quot;It’s hard to judge candidates in several rounds interview&quot;&gt;&lt;/a&gt;It’s hard to judge candidates in several rounds interview&lt;/h4&gt;&lt;p&gt;Enterprises spend lots of time and money to interview candidates. In my point of view, lots of enterprises did it wrong. &lt;strong&gt;We wouldn’t hire a mathematician by asking them to solve a definite integral, but enterprises try to find talents by asking them to solve Leetcode problems.&lt;/strong&gt; I’ve been searching for a job for the last month, I cracked around 130 Leetcode problems and I can always found a original Leetcode problem on the online assessment. Some enterprises claim that they want to hire a creative programmer but they can’t even come up with a creative question, I tired of solving this kind of problem again and again. What they really want are the candidates who are good at tech interview and willing to spend two months on Leetcode. Are they great programmers? Yes, some of them. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/osjobs/great_programmers.png&quot; alt=&quot;great_programmers&quot;&gt;&lt;/p&gt;
&lt;p&gt;Most importantly, even we spend so much time and money in the tech interview, we still don’t know much about the candidate. A resume and tech interview wouldn’t tell us the candidate’s coding skills (unless it’s open source) as well as teamwork ability. Can the candidate have a good conversation with other engineers? Can the candidate be a good mentor? We don’t know because we never work with them on a real project.&lt;/p&gt;
&lt;p&gt;How about internal referral? I can always find engineers would like to refer me even we don’t know each other before. I understand why this happened, the referrer would get a bonus once the candidate get hired. On the other hand, the candidate can get the job easier, a win-win situation? No, since they never work together, the referrer can only judge the candidates by their resumes. Therefore, this kind of internal referral has nothing to do with hire a great programmer but only turns the engineers into HR.&lt;/p&gt;
&lt;h4 id=&quot;So-What-should-we-do&quot;&gt;&lt;a href=&quot;#So-What-should-we-do&quot; class=&quot;headerlink&quot; title=&quot;So, What should we do&quot;&gt;&lt;/a&gt;So, What should we do&lt;/h4&gt;&lt;p&gt;Forget about the top school or top company, let’s recap what kind of engineers we are really looking for:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;People are curious, empathetic and creative.&lt;/li&gt;
&lt;li&gt;People can code, love to code and understand data structure or system design.&lt;/li&gt;
&lt;li&gt;People familiar with different kind of frameworks and used them in real-world projects.&lt;/li&gt;
&lt;li&gt;People value open communication and good teamwork.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Are we talking about open source contributors? Yes.&lt;/p&gt;
&lt;h3 id=&quot;Hire-an-open-source-contributors&quot;&gt;&lt;a href=&quot;#Hire-an-open-source-contributors&quot; class=&quot;headerlink&quot; title=&quot;Hire an open source contributors&quot;&gt;&lt;/a&gt;Hire an open source contributors&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;HR: “What kind of open source contributors we are talking about?”&lt;/p&gt;
&lt;p&gt;Me: “Every programmer contributors to an open source project that your company is using.”&lt;/p&gt;
&lt;p&gt;HR: “But there are some contributors just did some document work or even fix a typo!”&lt;/p&gt;
&lt;p&gt;Me: “If fix a typo is that easy, we would have 7000 contributors instead of &lt;a href=&quot;https://github.com/python/cpython/graphs/contributors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;700 in the CPython repo&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;HR: “I can do that in 20 minutes, but I don’t even know how to code!”&lt;/p&gt;
&lt;p&gt;Me: “Welcome, contributor, lots of us started by fixing a typo, :D.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Due to most of the core developers never available on the market,&lt;/strong&gt; we should focus on the contributors who are underrated but have the potential to become a core developer. What’s more, when more and more people contribute to a project, it will be much harder to find a typo to fix. So the new contributor have to work for other topics which are more advanced, what a virtuous circle.&lt;/p&gt;
&lt;h3 id=&quot;Any-other-reasons&quot;&gt;&lt;a href=&quot;#Any-other-reasons&quot; class=&quot;headerlink&quot; title=&quot;Any other reasons?&quot;&gt;&lt;/a&gt;Any other reasons?&lt;/h3&gt;&lt;h4 id=&quot;Contributors-are-easier-to-find&quot;&gt;&lt;a href=&quot;#Contributors-are-easier-to-find&quot; class=&quot;headerlink&quot; title=&quot;Contributors are easier to find&quot;&gt;&lt;/a&gt;Contributors are easier to find&lt;/h4&gt;&lt;p&gt;Instead of waiting for applications, you can search on &lt;a href=&quot;https://www.osjobs.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Open Source Jobs&lt;/a&gt; to find the contributors who are looking for a job. Meanwhile, GitHub is also a good place to search for contributors. If your company is using Django, you can find about 900 contributors &lt;a href=&quot;https://github.com/django/django/blob/master/AUTHORS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. &lt;a href=&quot;https://insights.stackoverflow.com/survey/2018#work-job-search-status&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Since 59.8 programmers are open to new opportunities&lt;/a&gt;, now you have more than 500 potential Django core developers who know Django better than others.&lt;/p&gt;
&lt;h4 id=&quot;Contributors-are-easier-to-hire&quot;&gt;&lt;a href=&quot;#Contributors-are-easier-to-hire&quot; class=&quot;headerlink&quot; title=&quot;Contributors are easier to hire&quot;&gt;&lt;/a&gt;Contributors are easier to hire&lt;/h4&gt;&lt;p&gt;Sometimes your company can only offer an exciting project instead of a high salary. Luckily, &lt;a href=&quot;https://www.linuxfoundation.org/publications/2018/06/open-source-jobs-report-2018/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;From 2018 Open Source Jobs Report - The Linux Foundation:&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Similarly, only 3% said money and perks were the best thing about their jobs, the same as last year.  Thirty percent cited the ability to work on interesting projects, collaborate with a global community (19%) and the opportunity to work on the most cuttingedge technology challenges (16%). These numbers are essentially unchanged from 2016 and 2017.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/osjobs/moving_jobs.png&quot; alt=&quot;moving_jobs&quot;&gt;&lt;/p&gt;
&lt;p&gt;Most contributors contribute just because they love the project. Once an enterprise&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Build an open source culture And companies are realizing that supporting open source projects can be a valuable recruiting and retention tool. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Contributors are likely to join it for a long term.&lt;/p&gt;
&lt;h4 id=&quot;Contributors-have-mentors-and-lots-of-friends&quot;&gt;&lt;a href=&quot;#Contributors-have-mentors-and-lots-of-friends&quot; class=&quot;headerlink&quot; title=&quot;Contributors have mentors and lots of friends&quot;&gt;&lt;/a&gt;Contributors have mentors and lots of friends&lt;/h4&gt;&lt;p&gt;Another post &lt;a href=&quot;https://medium.com/@melissamcewen/who-killed-the-junior-developer-33e9da2dc58c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Who Killed The Junior Developer?&lt;/a&gt; points out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But I know what companies have told me: “we don’t hire junior developers because we can’t afford to have our senior developers mentor them.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;7 months later, anything changed? No, we can only found one junior developer position in &lt;a href=&quot;https://news.ycombinator.com/item?id=17902901&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ask HN: Who is hiring? (September 2018)&lt;/a&gt;. How to save the junior developers? My answer is, &lt;strong&gt;ask them to become an open source contributor, then hire them.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;I begin contributing to CPython a few months ago, I learned a lot from the Python Software Foundation and I really appreciate their work. &lt;a href=&quot;https://github.com/python/cpython/pull/9035&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;I even discussed a document issue with Guido&lt;/a&gt; which only happens because I contribute to CPython. How much does it cost if a company ask Guido to mentor their developers, I don’t know. However, as long as I contribute to CPython, they will still be my mentors. &lt;strong&gt;Every programmer can find great mentors in the open source community when the company don’t need to pay a penny for it.&lt;/strong&gt; What’s more, contributors can really refer some great programmers to join the company because they really worked with the candidates. Datalogue proposes &lt;a href=&quot;https://medium.com/datalogue/open-source-hiring-84df05fdb357&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;a new way to hire&lt;/a&gt; which I think is a genius idea.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Choose an open source project from our list, or that you are passionate about, and meaningfully contribute to it.&lt;br&gt;…&lt;br&gt;And, of course we’d love to hire each applicant, but if the candidate doesn’t end up working for us, they aren’t left with a useless coding challenge repo, they are left with a meaningful contribution to a public, open-source project. They build their reputation with the community and have something awesome for their portfolio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;learn what the candidate considers to be a meaningful contribution and how they work with others&lt;/strong&gt; is much more important then solve some Leetcode problems.&lt;/p&gt;
&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;As a junior developer, you should contributor to an open source project you passionate with.&lt;br&gt;As a enterprise, you can hire open source contributors at &lt;a href=&quot;https://www.osjobs.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Open Source Jobs&lt;/a&gt; or hire me at &lt;a href=&quot;https://github.com/Windsooon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I launched &lt;a href=&quot;https://www.osjobs.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Open Source Jobs&lt;/a&gt; a week ago to let enterprises hire open s
    
    </summary>
    
    
      <category term="open source jobs" scheme="https://windsooon.github.io/tags/open-source-jobs/"/>
    
  </entry>
  
  <entry>
    <title>Skip deleted attributes while calling reset_mock</title>
    <link href="https://windsooon.github.io/2018/09/22/Skip%20deleted%20attributes/"/>
    <id>https://windsooon.github.io/2018/09/22/Skip deleted attributes/</id>
    <published>2018-09-22T07:51:00.000Z</published>
    <updated>2018-11-21T11:02:32.515Z</updated>
    
    <content type="html">&lt;p&gt;Today I’m going to review &lt;a href=&quot;https://github.com/python/cpython/pull/9302&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull_9302&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Step-1-discussion&quot;&gt;&lt;a href=&quot;#Step-1-discussion&quot; class=&quot;headerlink&quot; title=&quot;Step 1: discussion&quot;&gt;&lt;/a&gt;Step 1: discussion&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;When using a mock and deleting an attribute reset_mock cannot be used anymore since it tries to call reset_mock on the _deleted sentinel value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;from unittest.mock import MagicMock
mock = MagicMock()
mock.a = &amp;apos;test&amp;apos;
del mock.a
mock.reset_mock()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Gives:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):
  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
  File &amp;quot;/usr/lib/python3.5/unittest/mock.py&amp;quot;, line 544, in reset_mock
    child.reset_mock(visited)
AttributeError: &amp;apos;_SentinelObject&amp;apos; object has no attribute &amp;apos;reset_mock&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;Step-2-commit-messages-and-files-changed&quot;&gt;&lt;a href=&quot;#Step-2-commit-messages-and-files-changed&quot; class=&quot;headerlink&quot; title=&quot;Step 2: commit messages and files changed&quot;&gt;&lt;/a&gt;Step 2: commit messages and files changed&lt;/h3&gt;&lt;h4 id=&quot;commit-messages&quot;&gt;&lt;a href=&quot;#commit-messages&quot; class=&quot;headerlink&quot; title=&quot;commit messages:&quot;&gt;&lt;/a&gt;commit messages:&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Skip deleted attributes while calling reset_mock&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;files-changed&quot;&gt;&lt;a href=&quot;#files-changed&quot; class=&quot;headerlink&quot; title=&quot;files changed:&quot;&gt;&lt;/a&gt;files changed:&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/30days/day3_pull_9302.png&quot; alt=&quot;pull_9302&quot;&gt;&lt;/p&gt;
&lt;p&gt;So what actually reset_mock do?&lt;/p&gt;
&lt;h3 id=&quot;Step-3-dive-into-the-code&quot;&gt;&lt;a href=&quot;#Step-3-dive-into-the-code&quot; class=&quot;headerlink&quot; title=&quot;Step 3: dive into the code&quot;&gt;&lt;/a&gt;Step 3: dive into the code&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;def reset_mock(self,  visited=None,*, return_value=False, side_effect=False):
    &amp;quot;Restore the mock object to its initial state.&amp;quot;
    ...

    for child in self._mock_children.values():
        if isinstance(child, _SpecState):
            continue
        child.reset_mock(visited)

    ret = self._mock_return_value
    if _is_instance_mock(ret) and ret is not self:
        ret.reset_mock(visited)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;reset_mock(*, return_value=False, side_effect=False)&lt;br&gt;The reset_mock method resets all the call attributes on a mock object:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mock = Mock(return_value=None)&lt;br&gt;mock(‘hello’)&lt;br&gt;mock.called&lt;br&gt;    True&lt;br&gt;mock.reset_mock()&lt;br&gt;mock.called&lt;br&gt;    False&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Step-4-Fixed-it&quot;&gt;&lt;a href=&quot;#Step-4-Fixed-it&quot; class=&quot;headerlink&quot; title=&quot;Step 4: Fixed it&quot;&gt;&lt;/a&gt;Step 4: Fixed it&lt;/h3&gt;&lt;p&gt;But why we use _deleted instead of None? The PR propose a fix. Before understanding the fix, we have to understand Mock and Sentinel in python. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mock and MagicMock objects create all attributes and methods as you access them and store details of how they have been used. You can configure them, to specify return values or limit what attributes are available, and then make assertions about how they have been used:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And from &lt;a href=&quot;https://www.revsys.com/tidbits/sentinel-values-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sentinel&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes it is necessary to differentiate between an argument that has not been provided, and an argument provided with the value None. For that purpose, we create what’s called a ‘sentinel value’.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We implement _SentinelObject class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class _SentinelObject(object):
    &amp;quot;A unique, named, sentinel object.&amp;quot;
    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return &amp;apos;sentinel.%s&amp;apos; % self.name

    def __reduce__(self):
        return &amp;apos;sentinel.%s&amp;apos; % self.name

...
sentinel = _Sentinel()

DEFAULT = sentinel.DEFAULT
_missing = sentinel.MISSING
_deleted = sentinel.DELETED
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After we delete an attr in the code, child become sentinel.DELETED instead of None. So I propose a better test case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def test_attribute_deletion_reset_mock(self):
    mock = Mock()
    mock.attr = &amp;apos;test&amp;apos;
    del mock.attr
    mock.reset_mock()
    self.assertFalse(hasattr(mock, &amp;apos;attr&amp;apos;))
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;Instead of review PR every day, I found that write topic article depends on the pr/issue would be more helpful to readers. That is what I’m going to do next.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Today I’m going to review &lt;a href=&quot;https://github.com/python/cpython/pull/9302&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull_9302&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;
    
    </summary>
    
    
      <category term="python open source" scheme="https://windsooon.github.io/tags/python-open-source/"/>
    
  </entry>
  
  <entry>
    <title>Remove redundant overflow checks</title>
    <link href="https://windsooon.github.io/2018/09/21/Remove%20redundant%20overflow%20checks/"/>
    <id>https://windsooon.github.io/2018/09/21/Remove redundant overflow checks/</id>
    <published>2018-09-21T03:49:00.000Z</published>
    <updated>2018-11-21T11:01:31.156Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://windsooon.github.io/2018/09/19/Day%20One/&quot;&gt;Day One: Coroutine or Coroutine Function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today I’m going to review &lt;a href=&quot;https://github.com/python/cpython/pull/8757&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull_8757&lt;/a&gt;, My selection criteria it’s the PR should be &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Neither too new or too old&lt;/li&gt;
&lt;li&gt;Passed most of the tests and been labeled &lt;strong&gt;awaiting review&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;I can review it in a day.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Another python contributor &lt;strong&gt;Tal Einat&lt;/strong&gt; gave me so many advises in my yesterday post, Thank you so much, Tal.)&lt;/p&gt;
&lt;h3 id=&quot;Step-1-discussion&quot;&gt;&lt;a href=&quot;#Step-1-discussion&quot; class=&quot;headerlink&quot; title=&quot;Step 1: discussion&quot;&gt;&lt;/a&gt;Step 1: discussion&lt;/h3&gt;&lt;p&gt;I Searched the &lt;a href=&quot;https://bugs.python.org/issue34397&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issue discussion&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Max size of list and tuples is limited by &lt;strong&gt;PY_SSIZE_T_MAX / sizeof(PyObject*)&lt;/strong&gt;, so the sum of any two list/tuples sizes always &amp;lt;= &lt;strong&gt;PY_SSIZE_T_MAX&lt;/strong&gt; if &lt;strong&gt;sizeof(PyObject*)&lt;/strong&gt; &amp;gt; 1, which seems true for all supported (existing?) platforms.&lt;br&gt;It means that overflow checks in app1, ins1, list_concat and tupleconcat are redundant and can be safely removed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It looks like we overflow checks in app1, ins1, list_concat function, Tim Peters already reviewed some of the come so now is my turn.&lt;/p&gt;
&lt;h3 id=&quot;Step-2-commit-messages-and-files-changed&quot;&gt;&lt;a href=&quot;#Step-2-commit-messages-and-files-changed&quot; class=&quot;headerlink&quot; title=&quot;Step 2: commit messages and files changed&quot;&gt;&lt;/a&gt;Step 2: commit messages and files changed&lt;/h3&gt;&lt;h4 id=&quot;commit-messages&quot;&gt;&lt;a href=&quot;#commit-messages&quot; class=&quot;headerlink&quot; title=&quot;commit messages:&quot;&gt;&lt;/a&gt;commit messages:&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Remove redundant overflow checks in list and tuple implementation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;files-changed&quot;&gt;&lt;a href=&quot;#files-changed&quot; class=&quot;headerlink&quot; title=&quot;files changed:&quot;&gt;&lt;/a&gt;files changed:&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/30days/day2_pull_8757.png&quot; alt=&quot;pull_8757&quot;&gt;&lt;/p&gt;
&lt;p&gt;I’mo familiar with C, it’s kinda uncomfortable to review code I’m not familiar with. However, this is also a good way to learn c in a real project, right? let’s dive into the code.&lt;/p&gt;
&lt;h3 id=&quot;Step-3-dive-into-the-code&quot;&gt;&lt;a href=&quot;#Step-3-dive-into-the-code&quot; class=&quot;headerlink&quot; title=&quot;Step 3: dive into the code&quot;&gt;&lt;/a&gt;Step 3: dive into the code&lt;/h3&gt;&lt;h5 id=&quot;Search-context&quot;&gt;&lt;a href=&quot;#Search-context&quot; class=&quot;headerlink&quot; title=&quot;Search context&quot;&gt;&lt;/a&gt;Search context&lt;/h5&gt;&lt;p&gt;The changed locate at &lt;a href=&quot;https://github.com/python/cpython/blob/2fc46979b8c802675ca7fd51c6f2108a305001c8/Objects/listobject.c#L255&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;function ins1&lt;/a&gt; which lack of comments.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ins1(PyListObject *self, Py_ssize_t where, PyObject *v)
{
    Py_ssize_t i, n = Py_SIZE(self);
    ...
    /* Check the list is full or not
    if (n == PY_SSIZE_T_MAX) {    
        PyErr_SetString(PyExc_OverflowError,    
            &amp;quot;cannot add more objects to list&amp;quot;);    
        return -1;    
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After I search the call stack, this method is used to insert an item in a list. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lst = []
# We will call function ins1 when inserting value in a list
lst.insert(10, 0)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;BTW, what is &lt;strong&gt;PY_SSIZE_T_MAX&lt;/strong&gt; actually, I found &lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.maxsize&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sys.maxsize in the document&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An integer giving the maximum value a variable of type Py_ssize_t can take. It’s usually 2**31 - 1 on a 32-bit platform and 2**63 - 1 on a 64-bit platform.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This PR said the max number of a list should be &lt;strong&gt;PY_SSIZE_T_MAX / sizeof(PyObject*)&lt;/strong&gt; instead of &lt;strong&gt;PY_SSIZE_T_MAX&lt;/strong&gt; so we overcheck in the code.&lt;/p&gt;
&lt;h4 id=&quot;Step-4-Prove-speculation&quot;&gt;&lt;a href=&quot;#Step-4-Prove-speculation&quot; class=&quot;headerlink&quot; title=&quot;Step 4: Prove speculation&quot;&gt;&lt;/a&gt;Step 4: Prove speculation&lt;/h4&gt;&lt;p&gt;W can find The maxium number in the list in &lt;a href=&quot;https://github.com/python/cpython/blob/master/Objects/listobject.c#L34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;list_resize&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new_allocated = (size_t)newsize + (newsize &amp;gt;&amp;gt; 3) + (newsize &amp;lt; 9 ? 3 : 6);
if (new_allocated &amp;gt; (size_t)PY_SSIZE_T_MAX / sizeof(PyObject *)) {
    PyErr_NoMemory();
    return -1;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And According to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0353/#specification&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PEP353&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A new type &lt;strong&gt;Py_ssize_t&lt;/strong&gt; is introduced, which has the same size as the compiler’s &lt;strong&gt;size_t&lt;/strong&gt; type, but is signed. It will be a typedef for &lt;strong&gt;ssize_t&lt;/strong&gt; where available. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don’t know why we use siez_t here, so I asked at &lt;a href=&quot;https://python.zulipchat.com/#narrow/stream/116742-core.2Fhelp/topic/pull_8757&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python.zulipchat&lt;/a&gt;, Ammar Askar gave me a great answer. So, after that, I left some comments on the &lt;a href=&quot;https://github.com/python/cpython/pull/8757/files#diff-cde4fb3109c243b2c2badb10eeab7fcd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PR&lt;/a&gt;, I suggested to keep the error messages add some edit.&lt;/p&gt;
&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I’m not afraid of C that much, I reviewed the C syntax and I found it’s much easier than I learned before, I also found another challenge for myself, find the difference of sys.max, PY_SSIZE_T_MAX and SIZE_MAX.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://windsooon.github.io/2018/09/19/Day%20One/&quot;&gt;Day One: Coroutine or Coroutine Function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today I’m going to review 
    
    </summary>
    
    
      <category term="python open source" scheme="https://windsooon.github.io/tags/python-open-source/"/>
    
  </entry>
  
  <entry>
    <title>Coroutine or Coroutine Function</title>
    <link href="https://windsooon.github.io/2018/09/19/Coroutine%20or%20Coroutine%20Function/"/>
    <id>https://windsooon.github.io/2018/09/19/Coroutine or Coroutine Function/</id>
    <published>2018-09-19T12:57:00.000Z</published>
    <updated>2018-11-21T11:01:06.773Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Why-Review&quot;&gt;&lt;a href=&quot;#Why-Review&quot; class=&quot;headerlink&quot; title=&quot;Why Review?&quot;&gt;&lt;/a&gt;Why Review?&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Python need reviewers&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://devguide.python.org/pullrequest/#how-to-review-a-pull-request&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;developer guide&lt;/a&gt; points out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the bottlenecks in the Python development process is the lack of code reviews. If you browse the bug tracker, you will see that numerous issues have a fix, but cannot be merged into the main source code repository, because no one has reviewed the proposed solution. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python only have 90 reviewers, I used to think large companies like Google and Apple who are using python would donate a lot of money to The Python Software Foundation. However, the reality is python maintainers didn’t get pay for their work. I need money just like others, &lt;strong&gt;but I also like to work with people who enthusiasm with open source projects and do not work for money&lt;/strong&gt;. If you also want to work for an open source friendly company, try &lt;a href=&quot;www.osjobs.net&quot;&gt;Open Source Jobs&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;learn by contributing and give back to the community&lt;/p&gt;
&lt;p&gt; About two years ago, I asked a question about Scrapy on Stackoverflow. Dimitrios, the author of &lt;strong&gt;Learn Scrapy&lt;/strong&gt; gave a &lt;a href=&quot;https://stackoverflow.com/questions/38800942/scrapy-i-o-block-when-downloading-files&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;beatuful answer&lt;/a&gt;. After answered my last question, He told me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just subscribe to Stack Overflow to get some questions and you may be able to answer a few of them here and there… it’s fun! :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; So I started a challenge named &lt;a href=&quot;https://stackoverflow.com/users/4879270/windsooon?tab=answers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Answer 30 question in 30 days&lt;/a&gt;. After I finished the challenge, I gained some reputations in StackOverflow, plenty of &lt;strong&gt;thank you&lt;/strong&gt; and most importantly, &lt;strong&gt;I learned quite a lot by answering these questions which I didn’t expect.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; If you ask someone how to learn programming, they would recommend you some books or MOOCs which are great. However, &lt;strong&gt;learn by contributing is also a great way to improve programming skills.&lt;/strong&gt; Some people never answer a question on StackOverflow because they think they are not capable enough. This also happens in people who afraid to get involved in an open source project, &lt;strong&gt;they think the project is written by God, they can’t do anything to improve it. But the truth is, we can, and I will show you how to achieve it in this article.&lt;/strong&gt; BTW, some open source projects are so large that even the maintainers do not understand each part of it.&lt;/p&gt;
&lt;p&gt; I use python for more than three years. Since I quit my job last month, I do have some time to improve myself and give back to the community, we are not owing each other :D.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Call for contributors&lt;/p&gt;
&lt;p&gt; Python has millions of users but less than 700 contributors. In these series, I will show you how to review a PR step and step (feel free to give me some advises if you have a better workflow). I hope this would let people find some confidence to contribute to a large open source project. BTW, I didn’t study computer science at my college. So if I can do this, most people can do this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Practice my writing skills&lt;/p&gt;
&lt;p&gt; These series are not written by a 12 years old child, I’m not a native speaker but I am doing my best to write some great articles. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Step-1-commit-messages-and-files-changed&quot;&gt;&lt;a href=&quot;#Step-1-commit-messages-and-files-changed&quot; class=&quot;headerlink&quot; title=&quot;Step 1: commit messages and files changed&quot;&gt;&lt;/a&gt;Step 1: commit messages and files changed&lt;/h4&gt;&lt;p&gt;I started on September 19, 2018, the newest pull request is at this time is &lt;a href=&quot;https://github.com/python/cpython/pull/9408&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull_9408&lt;/a&gt;. &lt;/p&gt;
&lt;h5 id=&quot;commit-messages&quot;&gt;&lt;a href=&quot;#commit-messages&quot; class=&quot;headerlink&quot; title=&quot;commit messages&quot;&gt;&lt;/a&gt;commit messages&lt;/h5&gt;&lt;p&gt;Every PR &lt;a href=&quot;https://devguide.python.org/pullrequest/#making-good-commits&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;should have an issue number&lt;/a&gt; in its commit messages, like &lt;strong&gt;bpo-34732: …&lt;/strong&gt;. But this PR doesn’t have one so I can’t find any discussions about it.&lt;/p&gt;
&lt;h5 id=&quot;files-changed&quot;&gt;&lt;a href=&quot;#files-changed&quot; class=&quot;headerlink&quot; title=&quot;files changed&quot;&gt;&lt;/a&gt;files changed&lt;/h5&gt;&lt;p&gt;It looks like a piece of cake because it just adds two characters in the document. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/30days/day1_pull_9408.png&quot; alt=&quot;pull_9408&quot;&gt;&lt;/p&gt;
&lt;p&gt;But the devil is in the detail. The files changed are about coroutine, one of the hardest topics in python. It’s so complicated that this repo even has a label call &lt;a href=&quot;https://github.com/python/cpython/labels&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;expert-asyncio&lt;/a&gt;. So it’s not as easy as it looks like.&lt;/p&gt;
&lt;h4 id=&quot;Step-2-dive-into-the-source-code&quot;&gt;&lt;a href=&quot;#Step-2-dive-into-the-source-code&quot; class=&quot;headerlink&quot; title=&quot;Step 2: dive into the source code&quot;&gt;&lt;/a&gt;Step 2: dive into the source code&lt;/h4&gt;&lt;h5 id=&quot;Search-context&quot;&gt;&lt;a href=&quot;#Search-context&quot; class=&quot;headerlink&quot; title=&quot;Search context&quot;&gt;&lt;/a&gt;Search context&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;Relax, The first thing we have to do is find out what type of parameters push_async_exit accept.&lt;/strong&gt; I searched push_async_exit in python repo and found:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def push_async_exit(self, exit):
    &amp;quot;&amp;quot;&amp;quot;Registers a coroutine function with the standard __aexit__ method
    signature.
    Can suppress exceptions the same way __aexit__ method can.
    Also accepts any object with an __aexit__ method (registering a call
    to the method instead of the object itself).
    &amp;quot;&amp;quot;&amp;quot;
    _cb_type = type(exit)
    try:
        exit_method = _cb_type.__aexit__
    except AttributeError:
        # Not an async context manager, so assume it&amp;apos;s a coroutine function
        self._push_exit_callback(exit, False)
    else:
        self._push_async_cm_exit(exit, exit_method)
    return exit  # Allow use as a decorator
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;the comments say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Registers a coroutine function with the standard __aexit__ method signature.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It looks like this function accepts a &lt;strong&gt;coroutine function&lt;/strong&gt; as a parameter. We should accept the PR, right? Here is the funniest part, just like when you are trying to solve a Leetcode problem, you have to find out all the edge case. Is it possible that the push_async_exit should accept a &lt;strong&gt;coroutine&lt;/strong&gt;, the PR and the comments are wrong at the same time? Let’s use &lt;strong&gt;git blame&lt;/strong&gt; to figure it out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; git blame cpython/Lib/contextlib.py

1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 556)     def push_async_exit(self, exit):
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 557)         &amp;quot;&amp;quot;&amp;quot;Registers a coroutine function with the standard __aexit__ method
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 558)         signature.
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 559) 
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 560)         Can suppress exceptions the same way __aexit__ method can.
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 561)         Also accepts any object with an __aexit__ method (registering a call
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 562)         to the method instead of the object itself).
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 563)         &amp;quot;&amp;quot;&amp;quot;
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 565)         try:
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 566)             exit_method = _cb_type.__aexit__
1aa094f7403 (Ilya Kulakov       2018-01-25 12:51:18 -0800 567)         except AttributeError:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;They shared the same commit id so it is likely that the comment are correct. I’m not sure, so let’s dive into the code.&lt;/p&gt;
&lt;h5 id=&quot;Find-call-stack&quot;&gt;&lt;a href=&quot;#Find-call-stack&quot; class=&quot;headerlink&quot; title=&quot;Find call stack&quot;&gt;&lt;/a&gt;Find call stack&lt;/h5&gt;&lt;p&gt;I followed the function call stack&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Call stack
_exit_callbacks.append((is_sync, coroutine)) # stack top
_push_exit_callback(coroutine) 
push_async_exit(coroutine) # stack bottom

# How AsyncExitStack use _exit_callbacks
while self._exit_callbacks:
    is_sync, cb = self._exit_callbacks.pop()
    try:
        if is_sync:
            # Here is the trick
            cb_suppress = cb(*exc_details)
        else:
            cb_suppress = await cb(*exc_details)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The code shows that &lt;strong&gt;cb&lt;/strong&gt;(what we passed) is a callable object. &lt;strong&gt;So The next thing we have to do is find out whether coroutine function or coroutine is a callable object.&lt;/strong&gt; &lt;/p&gt;
&lt;h4 id=&quot;Step-3-understand-coroutine&quot;&gt;&lt;a href=&quot;#Step-3-understand-coroutine&quot; class=&quot;headerlink&quot; title=&quot;Step 3: understand coroutine&quot;&gt;&lt;/a&gt;Step 3: understand coroutine&lt;/h4&gt;&lt;h5 id=&quot;What-is-coroutine&quot;&gt;&lt;a href=&quot;#What-is-coroutine&quot; class=&quot;headerlink&quot; title=&quot;What is coroutine&quot;&gt;&lt;/a&gt;What is coroutine&lt;/h5&gt;&lt;p&gt;One of the lessons I learned from the python community is &lt;strong&gt;You should not submit or review the code you don’t understand, even it looks work.&lt;/strong&gt; So I have to make sure I understand the difference between coroutine and coroutine function. &lt;/p&gt;
&lt;p&gt;From the &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-coroutine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docs&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/c-api/coro.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coroutine object&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;coroutine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Coroutines is a more generalized form of subroutines. Subroutines are entered at one point and exited at another point. Coroutines can be entered, exited, and resumed at many different points. They can be implemented with the async def statement. See also PEP 492.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;coroutine function&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A function which returns a coroutine object. A coroutine function may be defined with the async def statement and may contain await, async for, and async with keywords. These were introduced by PEP 492.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coroutine objects are what functions declared with an async keyword return.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/asyncio-task.html#awaitables&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;And finally, why confusion happens&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that in this documentation the term “coroutine” can be used for two closely related concepts:&lt;/p&gt;
&lt;p&gt;a coroutine function: an async def function;&lt;br&gt;a coroutine object: object returned by calling a coroutine function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(At this time, I found the PR had been merged by the author of PEP 492)&lt;/p&gt;
&lt;h4 id=&quot;Step-4-Prove-speculation&quot;&gt;&lt;a href=&quot;#Step-4-Prove-speculation&quot; class=&quot;headerlink&quot; title=&quot;Step 4: Prove speculation&quot;&gt;&lt;/a&gt;Step 4: Prove speculation&lt;/h4&gt;&lt;p&gt;Now I see, &lt;strong&gt;coroutine function&lt;/strong&gt; is a function return a coroutine object,  &lt;strong&gt;coroutine object&lt;/strong&gt; is an abstract object return by &lt;strong&gt;coroutine function&lt;/strong&gt;. I wrote an example to prove my speculation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import asyncio

# coroutine function
async def foo():
    return 42

async def main():
    # print &amp;lt;class &amp;apos;function&amp;apos;&amp;gt;
    print(type(foo))
    # print &amp;lt;class &amp;apos;coroutine&amp;apos;&amp;gt;
    print(type(foo()))
    # TypeError: &amp;apos;coroutine&amp;apos; object is not callable
    print(type(foo()()))

asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We make it! &lt;strong&gt;coroutine object&lt;/strong&gt; is not callable. The coroutine in the document is ambiguous and we should use a &lt;strong&gt;coroutine function&lt;/strong&gt; alternative, and yes, we should accept the PR. But wait, now you understand coroutine right? No, I didn’t, I still don’t understand how it works, but I know more about it now.&lt;/p&gt;
&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I’m not familiar with coroutine, I spend 4 hours to review this &lt;strong&gt;tiny PR&lt;/strong&gt; when an expert only need 1 minute. Before I figured it out the PR already been merged, Does it worth? My answer is yes, of course. &lt;/p&gt;
&lt;h5 id=&quot;I-found-other-documents-to-improve&quot;&gt;&lt;a href=&quot;#I-found-other-documents-to-improve&quot; class=&quot;headerlink&quot; title=&quot;I found other documents to improve&quot;&gt;&lt;/a&gt;I found other documents to improve&lt;/h5&gt;&lt;p&gt;Since we accept the PR, we can improve other documents about &lt;strong&gt;coroutine&lt;/strong&gt;, &lt;strong&gt;coroutine function&lt;/strong&gt; and &lt;strong&gt;coroutine object&lt;/strong&gt;. For instance, I found some of them after search &lt;a href=&quot;https://github.com/python/cpython/search?l=reStructuredText&amp;amp;q=a+coroutine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;a coroutine in GitHub&lt;/a&gt;, this also happens at &lt;a href=&quot;https://www.python.org/dev/peps/pep-0492/#new-coroutine-declaration-syntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PEP492&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following new syntax is used to declare a native coroutine:&lt;/p&gt;
&lt;p&gt;async def read_data(db):&lt;br&gt;   pass&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I can improve the document after this &lt;strong&gt;useless review.&lt;/strong&gt; and I created &lt;a href=&quot;https://bugs.python.org/issue34753&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;an issue&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;I-know-more-about-coroutine-now&quot;&gt;&lt;a href=&quot;#I-know-more-about-coroutine-now&quot; class=&quot;headerlink&quot; title=&quot;I know more about coroutine now&quot;&gt;&lt;/a&gt;I know more about coroutine now&lt;/h5&gt;&lt;p&gt;Concurrency is a hard topic in python and I want to be an expert in it. I’m kinda moving forward, right? &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Why-Review&quot;&gt;&lt;a href=&quot;#Why-Review&quot; class=&quot;headerlink&quot; title=&quot;Why Review?&quot;&gt;&lt;/a&gt;Why Review?&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Python need reviewers&lt;/p&gt;
&lt;
    
    </summary>
    
    
      <category term="python open source" scheme="https://windsooon.github.io/tags/python-open-source/"/>
    
  </entry>
  
  <entry>
    <title>Why we never thank open source maintainers</title>
    <link href="https://windsooon.github.io/2017/11/23/Why%20we%20never%20thank%20open%20source%20maintainers/"/>
    <id>https://windsooon.github.io/2017/11/23/Why we never thank open source maintainers/</id>
    <published>2017-11-23T02:57:00.000Z</published>
    <updated>2018-11-22T06:51:10.693Z</updated>
    
    <content type="html">&lt;h4 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h4&gt;&lt;p&gt;Write a thank-you note to your favorite open source project on the NGO &lt;a href=&quot;https://www.thankyouopensource.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thank you, open source&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;Long-Version&quot;&gt;&lt;a href=&quot;#Long-Version&quot; class=&quot;headerlink&quot; title=&quot;Long Version&quot;&gt;&lt;/a&gt;Long Version&lt;/h4&gt;&lt;p&gt;Here is what I thoughts about why we never thank open source maintainers.&lt;/p&gt;
&lt;h4 id=&quot;I-can-build-it-by-myself&quot;&gt;&lt;a href=&quot;#I-can-build-it-by-myself&quot; class=&quot;headerlink&quot; title=&quot;I can build it by myself&quot;&gt;&lt;/a&gt;I can build it by myself&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;“Come on, this is so easy to me”&lt;/p&gt;
&lt;p&gt;“I can do a better version in a weekend”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is true that some of you guys can build a tool in a hackathon, but maintaining a project is a lot more difficult than building a project. Most of the time they are not writing code, but:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Writing the docs&lt;/li&gt;
&lt;li&gt;Reviewing the pull requests&lt;/li&gt;
&lt;li&gt;Looking at the issues &lt;/li&gt;
&lt;li&gt;Adding new features&lt;/li&gt;
&lt;li&gt;Answering questions on StackOverflow&lt;/li&gt;
&lt;li&gt;Discussing on google groups. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A maintainer has to do all the hard work day after day, year after year without pay. &lt;/p&gt;
&lt;h4 id=&quot;It’s-too-easy-to-forget-when-it’s-too-easy-to-make-use-of-their-work&quot;&gt;&lt;a href=&quot;#It’s-too-easy-to-forget-when-it’s-too-easy-to-make-use-of-their-work&quot; class=&quot;headerlink&quot; title=&quot;It’s too easy to forget when it’s too easy to make use of their work&quot;&gt;&lt;/a&gt;It’s too easy to forget when it’s too easy to make use of their work&lt;/h4&gt;&lt;p&gt;How do we use an open source project? &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We search for the solution to our problem.&lt;/li&gt;
&lt;li&gt;We visit some blogs and websites. (maybe just stackoverflow.com)&lt;/li&gt;
&lt;li&gt;We click on the project URL, read the README. We install and try it out. It works perfectly. Woohoo!&lt;/li&gt;
&lt;li&gt;We move onto our next problem.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While this also happens to be sometimes, &lt;strong&gt;because open source projects are so important just like air and water&lt;/strong&gt;. We don’t say thank you to air or water because we don’t know who built it. But We do know who built these awesome open source projects.&lt;/p&gt;
&lt;h4 id=&quot;The-maintainers-don’t-care-about-this&quot;&gt;&lt;a href=&quot;#The-maintainers-don’t-care-about-this&quot; class=&quot;headerlink&quot; title=&quot;The maintainers don’t care about this&quot;&gt;&lt;/a&gt;The maintainers don’t care about this&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;“They don’t need this, they need to pull requests or fix bugs.”&lt;/p&gt;
&lt;p&gt;“I think they would prefer donations.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They do care, &lt;a href=&quot;https://news.ycombinator.com/item?id=15623604&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sometimes all a maintainer needs is a “thank you” &lt;/a&gt;. Of course. It’s great if you could also donate some money, but most maintainers I know are not for profit. They can eventually make money but money is more of a byproduct than the main incentive. I’ve noticed that open source projects are always better than non-open source projects. because the most talented engineers do it out of passion and altruism. &lt;strong&gt;If you can’t donate some money, you can write a note.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;We-are-too-“busy”&quot;&gt;&lt;a href=&quot;#We-are-too-“busy”&quot; class=&quot;headerlink&quot; title=&quot;We are too “busy”&quot;&gt;&lt;/a&gt;We are too “busy”&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;“We are changing the world with our hands.”&lt;/p&gt;
&lt;p&gt;“My project has to launch in a week.”&lt;/p&gt;
&lt;p&gt;“We have hundreds of emails to reply everyday.”&lt;/p&gt;
&lt;p&gt;“We just don’t have time for it.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These open-source projects have more potential to change the world; or maybe they have already changed the world. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github uses Ruby on Rails &lt;/li&gt;
&lt;li&gt;Instagram uses django&lt;/li&gt;
&lt;li&gt;Lots of our servers are running Linux. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Our projects would not have made it without these open-source projects.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;10 minutes can do nothing. Modern social media forms us a habit of clicking an upvote button or a like button instead of spending 10 minutes to write a thank-you note, while a great project can save us so much more than 10 minutes. After I posted www.thankyouopensource.com on ProductHunt, some users complained about the 300-character requirement.  That’s because we want to avoid  simple notes such as: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Thank you, you guys rock.”&lt;/p&gt;
&lt;p&gt;“Thank you so much.”&lt;/p&gt;
&lt;p&gt;“I love your project.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think these users are too “busy” to write a thank-you note. But this looks like meaningless spam to me and I think reading these is just a waste of time. &lt;strong&gt;We want notes out of genuinity instead of obligation.&lt;/strong&gt; They are very different and we can all tell the difference by word. We want the maintainers to know that why we love their work and how their projects have helped us so that our genuine notes could serve as a motivation to them. &lt;strong&gt;And most importantly, we want to welcome everyone interested to join the maintaining community because it is indeed a cool job.  Once you have become a maintainer, your work would be sincerely appreciated through the thank-you notes.&lt;/strong&gt; I suggest Github add a tab titled “thanks” for every project, not just to appreciate the maintainers, but also to invite more people to join the project.&lt;/p&gt;
&lt;h4 id=&quot;Final-thoughts&quot;&gt;&lt;a href=&quot;#Final-thoughts&quot; class=&quot;headerlink&quot; title=&quot;Final thoughts:&quot;&gt;&lt;/a&gt;Final thoughts:&lt;/h4&gt;&lt;p&gt;Maintainers are the friends we want and the employees companies look for. They have passion, willingness to share, and persistence. They are the real MVP and they deserve a thank-you note.&lt;/p&gt;
&lt;h4 id=&quot;What-is-Thank-you-open-source&quot;&gt;&lt;a href=&quot;#What-is-Thank-you-open-source&quot; class=&quot;headerlink&quot; title=&quot;What is Thank you, open source&quot;&gt;&lt;/a&gt;What is &lt;a href=&quot;https://www.thankyouopensource.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thank you, open source&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;This is an NGO project providing a platform for people to express gratitude toward open source maintainers and authors. It also provides a platform for maintainers to advertise their side-projects. Cheers.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h4&gt;&lt;p&gt;Write a thank-you note to your favorite open source projec
    
    </summary>
    
    
      <category term="thank you open source" scheme="https://windsooon.github.io/tags/thank-you-open-source/"/>
    
  </entry>
  
  <entry>
    <title>How to make Python GIL better</title>
    <link href="https://windsooon.github.io/2017/07/16/Everything%20you%20should%20know%20about%20GIL/"/>
    <id>https://windsooon.github.io/2017/07/16/Everything you should know about GIL/</id>
    <published>2017-07-16T12:00:00.000Z</published>
    <updated>2019-05-20T14:57:42.411Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;How os system schele work&lt;/li&gt;
&lt;li&gt;Now with GIL&lt;/li&gt;
&lt;li&gt;multicore&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I assume you know what is GIL in python and some basic knowledgt to use the python threadding module. If you don’t, you may have a look at the article here. Let’s recap the os system&lt;/p&gt;
&lt;h3 id=&quot;How-os-system-schele-work&quot;&gt;&lt;a href=&quot;#How-os-system-schele-work&quot; class=&quot;headerlink&quot; title=&quot;How os system schele work&quot;&gt;&lt;/a&gt;How os system schele work&lt;/h3&gt;&lt;p&gt;It’s not a easy topic, we speed quite a long time to search for a prefect scheduling policy. Since Linux 2.6.23, the default scheduler is CFS. What is CFS and why we need it? &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;How os system schele work&lt;/li&gt;
&lt;li&gt;Now with GIL&lt;/li&gt;
&lt;li&gt;multicore&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I assume you know what is GIL in python 
    
    </summary>
    
    
      <category term="GIL Python" scheme="https://windsooon.github.io/tags/GIL-Python/"/>
    
  </entry>
  
  <entry>
    <title>How to make it to Product Hunt front page in 2 weeks</title>
    <link href="https://windsooon.github.io/2017/07/16/How%20to%20make%20it%20to%20Product%20Hunt%20front%20page%20in%202%20weeks/"/>
    <id>https://windsooon.github.io/2017/07/16/How to make it to Product Hunt front page in 2 weeks/</id>
    <published>2017-07-16T12:00:00.000Z</published>
    <updated>2017-08-08T13:29:03.000Z</updated>
    
    <content type="html">&lt;p&gt;After spending more than one year developing features I thought users might need on my last MVP, &lt;a href=&quot;https://unicooo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicooo&lt;/a&gt;. I picked the idea of &lt;a href=&quot;https://www.channelshunt.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YouTube Classified&lt;/a&gt; from my side project to-do list and planned to finish it in two weeks. &lt;/p&gt;
&lt;p&gt;Update: &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/product.png&quot; alt=&quot;product&quot;&gt;&lt;/p&gt;
&lt;p&gt;We are on the Product Hunt front page today! Thanks guys!&lt;/p&gt;
&lt;h3 id=&quot;Coming-Up-With-The-Idea&quot;&gt;&lt;a href=&quot;#Coming-Up-With-The-Idea&quot; class=&quot;headerlink&quot; title=&quot;Coming Up With The Idea&quot;&gt;&lt;/a&gt;Coming Up With The Idea&lt;/h3&gt;&lt;p&gt;Since I live in China, the Great Firewall blocks the easy access to YouTube that the rest of the world takes for granted. When I finally started to use it about a year ago, I found it hard to find the tech and science related channels that I needed. What I did at first was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Searching the keyword “Science YouTube Channels Recommendation” on Google.&lt;/li&gt;
&lt;li&gt;Clicking all the websites displayed on the first page.&lt;/li&gt;
&lt;li&gt;Building a channel set on my mind because many of them repeatedly recommend the most popular channels such as &lt;a href=&quot;https://www.youtube.com/user/minutephysics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minutephysics&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/user/destinws2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SmarterEveryDay&lt;/a&gt; which are awesome indeed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What the heck.&lt;/p&gt;
&lt;p&gt;To make things easier, I also did a little research on “YouTube Channels Classified,” and found &lt;a href=&quot;https://socialblade.com/youtube/top/100/mostsubscribed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;socialblade&lt;/a&gt;. SocialBlade classifies some YouTube channels, but instead of targeting toward the regular YouTube users, the application is for data analysis, where important categories like Product Review and Unboxing are nowhere to be seen. I totally understand. When there are simply too many channels on YouTube, the easiest way is to limit to 20-30 categories because it’s impossible to correctly classify all the channels under the subcategories. Therefore, those categories are 100% correct, but unfortunately useless. &lt;/p&gt;
&lt;p&gt;How about YouTube itself? Doesn’t YouTube put channels into categories? When I search &lt;a href=&quot;https://www.youtube.com/channel/UCkcRYjXjAhsBPVH4aeIPxmQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;basketball&lt;/a&gt;, YouTube does recommend related channels at the bottom. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/basketball_channel.png&quot; alt=&quot;Basketball&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, when I search &lt;a href=&quot;https://www.youtube.com/channel/UCOpNcN46UbXVtpKMrmU4Abg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;game&lt;/a&gt;, YouTube does not recommend related channels at the bottom, which is very confusing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/game_channel.png&quot; alt=&quot;Gaming&quot;&gt;&lt;/p&gt;
&lt;p&gt;Finding the main users is very important, and in this case of &lt;a href=&quot;https://www.channelshunt.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YouTube Classified&lt;/a&gt;, we have a very broad user range. Not only can it help English speaking users, people who want to get to know another culture can also make great use of it. For example, if I go to the United States, I would like to know more about its culture, but all of my currently subscribed channels are Chinese, so YouTube Classified may help me by letting me explore popular American channels I’m interested in. &lt;/p&gt;
&lt;p&gt;For now, my main idea is to classify some of the most popular channels into categories and subcategories, such as Computer under Science, Make-Up under Beauty&amp;amp;Fashion, and Tech Products (Reviews) under Reviews. What about our business model? I think once we grow big, we can advertise some channels because a lot of new channels want to stand out in the massive crowd. Now, I’ll move on to start programming. &lt;/p&gt;
&lt;h3 id=&quot;Business-model&quot;&gt;&lt;a href=&quot;#Business-model&quot; class=&quot;headerlink&quot; title=&quot;Business model&quot;&gt;&lt;/a&gt;Business model&lt;/h3&gt;&lt;p&gt;I think we should have some features that YouTube doesn’t have, and I thought of adding stories about YouTubers, on how they built and maintain their channels. It’s fun to their followers and useful for new YouTubers. But in the end, I chose to just add recommended websites at the bottom of each subcategory. People interested in math are likely to be also interested in science related websites and blogs. I don’t have time to implement it yet, so I simply let users submit websites they recommend.&lt;br&gt;For now, we just recommend the hottest channels with more than 100k subscribers. But I realized that we should also be standing in the YouTubers’ shoes and think of them. If I were a YouTubers, what can this application do for me? There are so many popular channels already, and it’s very hard for a new YouTuber to stand out, therefore my next step goes to adding newer channels.&lt;/p&gt;
&lt;h3 id=&quot;Version-Control&quot;&gt;&lt;a href=&quot;#Version-Control&quot; class=&quot;headerlink&quot; title=&quot;Version Control&quot;&gt;&lt;/a&gt;Version Control&lt;/h3&gt;&lt;p&gt;I usually open source my entire code on Github, just like &lt;a href=&quot;https://github.com/Windsooon/Unicooo-django&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicooo-django&lt;/a&gt;. Not only because it’s free, but also because I think the code, in general, should be open source by default.(Now &lt;a href=&quot;https://bitbucket.org/WindsonYang/youtube-category&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;youtube-category&lt;/a&gt; is open source),&lt;br&gt;&lt;a href=&quot;https://bitbucket.org/product&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bitbucket&lt;/a&gt; is great and offers unlimited private repos. My only problem when using it is that I have to set my ssh key to my personal page instead of the repo. &lt;/p&gt;
&lt;p&gt;You should not set your ssh key here.&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/bitbucket_ca.png&quot; alt=&quot;repo&quot;&gt;&lt;/p&gt;
&lt;p&gt;Instead, add to your personal page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/bitbucket_personal.png?raw=true&quot; alt=&quot;personal&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hosting-the-code&quot;&gt;&lt;a href=&quot;#Hosting-the-code&quot; class=&quot;headerlink&quot; title=&quot;Hosting the code&quot;&gt;&lt;/a&gt;Hosting the code&lt;/h3&gt;&lt;p&gt;I compared among &lt;a href=&quot;https://www.pythonanywhere.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PythonAnywhere&lt;/a&gt;, &lt;a href=&quot;https://www.heroku.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Heroku&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS&lt;/a&gt;, and &lt;a href=&quot;https://www.digitalocean.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DigitalOcean&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PythonAnywhere costs less than Heroku. &lt;a href=&quot;https://blog.pythonanywhere.com/65/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Difference between PythonAnywhere and Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS is not easy for the beginners, and it may take quite a long time to set up. If you would like to know more about AWS, this guide may help.&lt;a href=&quot;https://github.com/open-guides/og-aws&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Amazon Web Services — a practical guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DigitalOcean is great, and it also has some useful &lt;a href=&quot;https://blog.digitalocean.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I choose PythonAnywhere for at least these four reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Super easy to set up and you can usually deploy it in 10 minutes.&lt;/li&gt;
&lt;li&gt;Offers a &lt;a href=&quot;https://www.pythonanywhere.com/pricing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;free plan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Customer service is quite helpful(Usually reply under two hours). &lt;/li&gt;
&lt;li&gt;The author of Test-Driven-Development with Python, Harry Percival, used to work here. I learned a lot from this book. Thanks, Harry Percival.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Coding&quot;&gt;&lt;a href=&quot;#Coding&quot; class=&quot;headerlink&quot; title=&quot;Coding&quot;&gt;&lt;/a&gt;Coding&lt;/h3&gt;&lt;p&gt;I started coding on June 28th, 2017. Before that, I built a &lt;a href=&quot;https://github.com/Windsooon/awesome-youtube-category&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repo&lt;/a&gt; in Github and submitted it on HackerNews to attract hackers to help classify together. It didn’t get much attention, but Github and HackerNews are still great places to ask for help and to find resources. There are so many awesome-xxx going on right now. &lt;/p&gt;
&lt;p&gt;As you can see, the application is indeed simple. Use YouTube API to get some data and then display it. At first, I used &lt;a href=&quot;https://github.com/Windsooon/django-hackathon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;django-hackathon&lt;/a&gt; which is for Hackathon, and I spent some hours on building the backend (a shout-out to the awesome Diango and Diango Rest FrameWork). I tried full page Ajax that gives users a better experience, but I find it hard to run when the application begins to have more logic, so I deleted that part of the code and rewrote it. Remember, delete the useless code as early as possible.&lt;/p&gt;
&lt;p&gt;I followed &lt;a href=&quot;http://jgthms.com/web-design-in-4-minutes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Design in 4 minutes&lt;/a&gt; for the basic design. Then spend some time on responsive design. I use &lt;a href=&quot;https://purecss.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pure&lt;/a&gt; as my front end framework, it works well except for the font size. If you’re also not familiar with it, check these excellent articles &lt;a href=&quot;http://www.creativebloq.com/css3/handling-typography-responsive-design-4122794&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to make your typography responsive&lt;/a&gt; and &lt;a href=&quot;https://zellwk.com/blog/responsive-typography/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Everything I know about Responsive Web Typography&lt;/a&gt;. Basically, what you have to do is to use vw: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@media only screen and (max-width: 767px) {
    .font-class {
        font-size: 6vw;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;Signing-certificates&quot;&gt;&lt;a href=&quot;#Signing-certificates&quot; class=&quot;headerlink&quot; title=&quot;Signing certificates&quot;&gt;&lt;/a&gt;Signing certificates&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Let’s encrypt&lt;/a&gt; and use &lt;a href=&quot;https://github.com/lukas2511/dehydrated&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dehydrated&lt;/a&gt; as a great tool to set it up. Be aware that every time after you re-apply the certificate, you have to notify PythonAnywhere people for updating.&lt;/p&gt;
&lt;h3 id=&quot;Domain&quot;&gt;&lt;a href=&quot;#Domain&quot; class=&quot;headerlink&quot; title=&quot;Domain&quot;&gt;&lt;/a&gt;Domain&lt;/h3&gt;&lt;p&gt;Since YouTube Classified is based on YouTube and that I want to attract YouTube users as our users, I titled something that starts with YouTube, so that when the users type in YouTube on the browser, it will show the website. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/broswer.png&quot; alt=&quot;browser&quot;&gt;&lt;/p&gt;
&lt;p&gt;After picking Godaddy as the domain hosting, I searched the coupon for buying a “.com” domain. At first, the 90% off coupon looked great, but when I was paying for it, I received a payment error. When I asked people who work at Godaddy for help, they told me that the coupon was no longer valid, so I gave up the idea of coupon and paid about $8 for “youtubeclassified.com” for a year. I can get a better pricing if I pay for two years at a time, but since I’m not sure if this business idea will work, I just paid for one year. &lt;/p&gt;
&lt;h4 id=&quot;Update&quot;&gt;&lt;a href=&quot;#Update&quot; class=&quot;headerlink&quot; title=&quot;Update&quot;&gt;&lt;/a&gt;Update&lt;/h4&gt;&lt;p&gt;Don’t use a domain name that contain other company’s trademark. Or you may be caught in a legal dispute and change domain is a nightmare.&lt;/p&gt;
&lt;h3 id=&quot;Professional-Email&quot;&gt;&lt;a href=&quot;#Professional-Email&quot; class=&quot;headerlink&quot; title=&quot;Professional Email&quot;&gt;&lt;/a&gt;Professional Email&lt;/h3&gt;&lt;p&gt;There are a lot of business email hosting on the internet, but &lt;a href=&quot;https://www.zoho.com/mail/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zoho mail&lt;/a&gt; is the only one I found with a free plan, so that’s my pick. It worked after some easy setup. &lt;/p&gt;
&lt;h3 id=&quot;Uptime-Monitor&quot;&gt;&lt;a href=&quot;#Uptime-Monitor&quot; class=&quot;headerlink&quot; title=&quot;Uptime Monitor&quot;&gt;&lt;/a&gt;Uptime Monitor&lt;/h3&gt;&lt;p&gt;I use &lt;a href=&quot;https://uptimerobot.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UptimeRobot&lt;/a&gt;, it gives you 50 monitors and every check for 5 minutes for free.&lt;/p&gt;
&lt;h3 id=&quot;Adding-Google-analytics&quot;&gt;&lt;a href=&quot;#Adding-Google-analytics&quot; class=&quot;headerlink&quot; title=&quot;Adding Google analytics&quot;&gt;&lt;/a&gt;Adding Google analytics&lt;/h3&gt;&lt;p&gt;For people who don’t know what google analytics is, it’s a tool that shows you which page your users focus on and what regions the users are from.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/category_view.png&quot; alt=&quot;page&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/location.png&quot; alt=&quot;location&quot;&gt;&lt;/p&gt;
&lt;p&gt;Remember to filter out your own IP address in the setting.&lt;/p&gt;
&lt;h3 id=&quot;Email-Subscription-Management&quot;&gt;&lt;a href=&quot;#Email-Subscription-Management&quot; class=&quot;headerlink&quot; title=&quot;Email Subscription Management&quot;&gt;&lt;/a&gt;Email Subscription Management&lt;/h3&gt;&lt;p&gt;I use &lt;a href=&quot;https://mailchimp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MailChimp&lt;/a&gt; to manage subscription from users. It has great API docs, great customer service, as well as a free plan. When a user subscribes under a certain subcategory, I get a page URL to identify with the sub category page that the user is interested in. At first, I got lost at group and segment, but after some research, I found out what I have to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send email and URL to my backend.&lt;/li&gt;
&lt;li&gt;Use the group API to &lt;a href=&quot;https://developer.mailchimp.com/documentation/mailchimp/reference/lists/interest-categories/interests/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Create the group&lt;/a&gt;. (If the group already exists, it will return a 400, but you can just ignore it.)&lt;/li&gt;
&lt;li&gt;Loop over the groups by group name inside your interested subcategory to get the group ID.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mailchimp.com/documentation/mailchimp/reference/lists/members/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Add the email to this group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/how%20I%20build%20the%20MVP/mail.png&quot; alt=&quot;ui&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Suggestion-from-Users&quot;&gt;&lt;a href=&quot;#Suggestion-from-Users&quot; class=&quot;headerlink&quot; title=&quot;Suggestion from Users&quot;&gt;&lt;/a&gt;Suggestion from Users&lt;/h3&gt;&lt;p&gt;After finishing my first version, I immediately sent the link to my friends and asked for their suggestion. Specifically, I asked them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any confusion when using it?&lt;/li&gt;
&lt;li&gt;Any business model idea?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;None of them are programmers, but both of them gave me excellent advice. Philip suggested giving each subcategory an individual page. Before that idea was given, under a certain category page, it lists all the subcategories on the same page, such as Math, Computer, and Physics under the Science category. I changed it within a day. Julian suggested to let users choose the categories they love so that they will be more likely to come back. It’s a great idea, but I didn’t implement it right away because it’s too complicated and I wasn’t sure if many users would need this feature. I also let my workmate use the website in front of me so that I could know which part confuses him. I paid attention to where he clicked, and that if he knew how to search for subcategories. After that, I changed some button styles and removed some href to beautify the website. I also learned from my co-founder, Jessica. She gave me some good advice on navigation and sorting of the channels. &lt;/p&gt;
&lt;p&gt;To be honest, what they suggested are quite useful and obviously, and I don’t know why I missed these ideas when programming. I focused more on the structure of the code instead of what the users really need. Thus, I’d say listen to your friends before you spend a lot of time on a new feature, because they may not be hackers, but they represent the real users who will be spending time on your MVP.&lt;/p&gt;
&lt;h3 id=&quot;Marketing&quot;&gt;&lt;a href=&quot;#Marketing&quot; class=&quot;headerlink&quot; title=&quot;Marketing&quot;&gt;&lt;/a&gt;Marketing&lt;/h3&gt;&lt;p&gt;I made a list to submit and advertise my application:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hackernews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.producthunt.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;producthunts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wired.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://betalist.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Betalist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://thenextweb.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TheNextWeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lifehacker.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lifehacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/startups/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reddit/startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/youtube/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reddit/youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/Entrepreneur/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reddit/Entrepreneur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/SideProject/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reddit/SideProject&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Others&quot;&gt;&lt;a href=&quot;#Others&quot; class=&quot;headerlink&quot; title=&quot;Others&quot;&gt;&lt;/a&gt;Others&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@PitchMantra/100-best-places-to-promote-your-startup-6ad7a52d79c0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tech websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://triphappy.com/blog/131-startup-directories-to-promote-your-startup/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tech websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.inboundio.com/blog/27-websites-to-submit-your-startup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tech websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Quora and other blogs&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We answer questions on Quora and post comments on blogs about YouTube channel recommendation, as ways to advertise our application. We carefully choose the really useful channels that other comments didn’t mention. Then, I wrote this article to share my experience on how to build this MVP.&lt;/p&gt;
&lt;h3 id=&quot;Hi-hackers&quot;&gt;&lt;a href=&quot;#Hi-hackers&quot; class=&quot;headerlink&quot; title=&quot;Hi hackers&quot;&gt;&lt;/a&gt;Hi hackers&lt;/h3&gt;&lt;p&gt;Once again, HackerNews guys didn’t pay any attention to my application, but I understand. Firstly, it’s not geeky enough to just use YouTube API and then classify some channels. Secondly, it’s not impressive. Thirdly, as a tool, it’s not that useful. I think so too. Before building the first version, I thought about classifying the channels by their titles and description using Naive Bayes, a tool that I have recently learned about and wanted to give it a try. I also thought of building an iOS application instead of a website for the same reason. &lt;/p&gt;
&lt;p&gt;This reminds me of a comment made by “xando” under the post on &lt;a href=&quot;https://news.ycombinator.com/item?id=14238005&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ask HN: Who is hiring? (May 2017)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey, a friendly reminder. I’m parsing the thread, all job offers added here are also available on the map on&lt;br&gt;&lt;a href=&quot;https://whoishiring.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://whoishiring.io&lt;/a&gt; or just HN items &lt;a href=&quot;https://whoishiring.io/search/36.0440/-90.8984/4?source=hn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://whoishiring.io/search/36.0440/-90.8984/4?source=hn&lt;/a&gt;&lt;br&gt;If you post here, please use the below format to help me with parsing. If you won’t, no worries, I will do my best to get all the things right.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;1) {company} | {job title} | {locations} | {attrs: ONSITE, REMOTE, INTERNS, VISA, SALARY, company-url}
Google | Software Developer | SF | VISA https://google.com
DuckDuckGo | Software Developer | Paoli PA | REMOTE, VISA, SALARY:100k-120k
Facebook | Web-developer | Zurich | SALARY:120k CHF 
Google | Site Reliability Engineer | London | SALARY:120k GBP, VISA, REMOTE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2) {company} | {job title} | {location}
Google | Site Reliability Engineer | Sydney
Facebook | Web-developer | Zurich
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;I’m using this regex to test the first line, you can test it here &lt;a href=&quot;https://regex101.com/r/relwQD/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://regex101.com/r/relwQD/3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;\s*(?P&amp;lt;company&amp;gt;[^|]+?)\s*\|\s*(?P&amp;lt;title&amp;gt;[^|]+?)\s*\|\s*(?P&amp;lt;locations&amp;gt;[^|]+?)\s*(?:\|\s*(?P&amp;lt;attrs&amp;gt;.+))?$
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Check bellow for the SALARY regex.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;SALARY:(?P&amp;lt;salary_min&amp;gt;\d+(?:k|K)?)(?:\s*\-\s*(?P&amp;lt;salary_max&amp;gt;\d+(?:k|K)?)?)?(?:\s?(?P&amp;lt;currency&amp;gt;[A-Z]{3}))?     
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;and you can test it as well &lt;a href=&quot;https://regex101.com/r/SRWkMz/2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://regex101.com/r/SRWkMz/2/&lt;/a&gt;&lt;br&gt;—— xando, AskHN&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This guy built &lt;a href=&quot;https://whoishiring.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://whoishiring.io&lt;/a&gt; and wants more people to submit their jobs there. Instead of using machine learning or algorithm to crawl the data and format it, he just simply asked people format their comments! So I think, my purpose is to build this application for YouTube users to really make use of it, so how can I spend so much time on machine learning risking the outcome that people don’t like the idea at all? So, I just control myself and try to get this shit done.&lt;br&gt;At this point, I just simply want to evaluate it base on Harry Percival’s three standards on &lt;a href=&quot;http://www.obeythetestinggoat.com/book/chapter_manual_deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Test-Driven-Development with Python&lt;/a&gt;: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is the site usable? Is it better than nothing? Can we make lists on it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rule of thumb is, if “yes” is the only answer, then don’t mind the bugs and deploy it now. Fortunately, the idea of YouTube Classified passed. &lt;/p&gt;
&lt;p&gt;As Paul Graham once written in Hacker and Painter (I can’t find the original quote because I read the Chinese version):&lt;br&gt;“ People think hackers design everything before coding. But they don’t. They are just: coding-&amp;gt;thinking-&amp;gt;change-&amp;gt;coding.”&lt;/p&gt;
&lt;h3 id=&quot;What-is-next&quot;&gt;&lt;a href=&quot;#What-is-next&quot; class=&quot;headerlink&quot; title=&quot;What is next&quot;&gt;&lt;/a&gt;What is next&lt;/h3&gt;&lt;p&gt;Hackathon in a month: Build four side projects in a month. Happy coding.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;After spending more than one year developing features I thought users might need on my last MVP, &lt;a href=&quot;https://unicooo.com/&quot; target=&quot;_
    
    </summary>
    
    
      <category term="mvp django side-project" scheme="https://windsooon.github.io/tags/mvp-django-side-project/"/>
    
  </entry>
  
  <entry>
    <title>How to use selenium when using docker container</title>
    <link href="https://windsooon.github.io/2017/06/14/How%20to%20use%20selenium%20with%20docker/"/>
    <id>https://windsooon.github.io/2017/06/14/How to use selenium with docker/</id>
    <published>2017-06-14T12:39:00.000Z</published>
    <updated>2018-09-25T14:00:17.239Z</updated>
    
    <content type="html">&lt;h3 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h3&gt;&lt;p&gt;Use &lt;a href=&quot;https://github.com/zalando/zalenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zalenium&lt;/a&gt;(for video recording) or &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-selenium&lt;/a&gt;, follow the docs, pay attantion to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;container port connection&lt;/li&gt;
&lt;li&gt;set liveserver if you are using django &lt;/li&gt;
&lt;li&gt;&lt;p&gt;–network set to your host network&lt;br&gt;run the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --network your_container_network --rm -ti --name zalenium -p 4444:4444 -p 5555:5555 \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /tmp/videos:/home/seluser/videos \
--privileged dosel/zalenium start
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;run code like this (&lt;strong&gt;web&lt;/strong&gt; is your django container id, or container alias in docker-compose)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python manage.py test django_test --liveserver=web:8081
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;your django_test.py look like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class BaseTestStaticLiveServerTestCase(StaticLiveServerTestCase):

    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Remote(
            command_executor=&amp;apos;http://zalenium:4444/wd/hub&amp;apos;,
            desired_capabilities=DesiredCapabilities.FIREFOX)
        cls.brower_size = cls.driver.get_window_size()
        cls.live_server_url = &amp;apos;http://web:8081&amp;apos;
        super(BaseTestStaticLiveServerTestCase, cls).setUpClass()

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()
        super(BaseTestStaticLiveServerTestCase, cls).tearDownClass()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And everything is done.&lt;/p&gt;
&lt;h3 id=&quot;Long-version&quot;&gt;&lt;a href=&quot;#Long-version&quot; class=&quot;headerlink&quot; title=&quot;Long version:&quot;&gt;&lt;/a&gt;Long version:&lt;/h3&gt;&lt;p&gt;Althought my project use docker, but at first I’m not use &lt;a href=&quot;https://github.com/zalando/zalenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zalenium&lt;/a&gt; or &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-selenium&lt;/a&gt;, and just try to follow the &lt;a href=&quot;https://selenium-python.readthedocs.io/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Selenium docs&lt;/a&gt; do it by myself.&lt;/p&gt;
&lt;p&gt;first just test selenium in laptop(mac osX), create a virtual environment&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;virtualenv -p python3 selenium_test 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;active it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd selenium_test
source bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;create a python file for test&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;touch test_for_fun.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;in test_for_fun.py&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from selenium import webdriver

driver = webdriver.Firefox()
driver.get(&amp;quot;http://www.python.org&amp;quot;)
print(driver.title)
assert(&amp;quot;Python&amp;quot; in driver.title)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;run it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python test_for_fun.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If your laptop have GUI and already install Firefox, everything should work well, the script auto open the Firefox browser then done. If you are not using Firefox, you may use &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ChromeDriver&lt;/a&gt; instead. &lt;/p&gt;
&lt;h3 id=&quot;Now-I-try-to-config-it-with-docker-I-using-Debian-as-my-server-Things-become-intersting&quot;&gt;&lt;a href=&quot;#Now-I-try-to-config-it-with-docker-I-using-Debian-as-my-server-Things-become-intersting&quot; class=&quot;headerlink&quot; title=&quot;Now I try to config it with docker, I using Debian as my server. Things become intersting.&quot;&gt;&lt;/a&gt;Now I try to config it with docker, I using Debian as my server. Things become intersting.&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/blog/master/imgs/program_work.jpg&quot; alt=&quot;fun&quot;&gt;&lt;/p&gt;
&lt;p&gt;Before spend dozen of time to debug this test, first you should make sure do you really need a real browser to run the test, actually, you have some options.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;http://phantomjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PhantomJS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://developers.google.com/web/updates/2017/04/headless-chrome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Headless Chromium&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xvfb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I read some article about Phantom and Xvfb, like &lt;a href=&quot;https://news.ycombinator.com/item?id=8418071&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;https://watirmelon.blog/2015/12/08/real-vs-headless-browsers-for-automated-acceptance-tests/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the problem with Phantom.js is that compared to an actual browser it still falls short.&lt;br&gt;Headless browsers make it harder to write/debug tests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hard to debug? If you wannt test a complicate project. I guess you the third one is better. Thanks to the great job from the awesome programmers, we don’t have to do much but some basic setup. First you have to add this to the /etc/apt/source.list&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mozilla.debian.net/ jessie-backports firefox-release
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then run &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/ 
wget mozilla.debian.net/pkg-mozilla-archive-keyring_1.1_all.deb 
dpkg -i pkg-mozilla-archive-keyring_1.1_all.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;after that &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#install Xvfb and firefox
apt-get update &amp;amp;&amp;amp; apt-get install -y xvfb -t jessie-backports firefox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After that you should download &lt;a href=&quot;https://github.com/mozilla/geckodriver/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;geckodriver&lt;/a&gt; or &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ChromeDriver&lt;/a&gt; that match your docker container version then add them to your container and specify its path like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo PATH=$PATH:/geckodriver_container_path
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or tell webdriver the location of firefox in your code &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from selenium.webdriver.firefox.firefox_binary import FirefoxBinary

binary = FirefoxBinary(&amp;apos;geckodriver_container_path&amp;apos;)
driver = webdriver.Firefox(firefox_binary=binary)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you don’t know how to add geckodriver in your docker container, you may have a look at &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#add&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ADD&lt;/a&gt; or &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#volume&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VOLUME&lt;/a&gt;, you can add geckodriver to your images in Dockerfile like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;From python
RUN mkdir -p /usr/src/
ADD geckodriver_host_path /usr/src/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or create a volume to bind the you directory between container and host:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -v /geckodriver_host_path:/usr/src/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or you will get error message like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):
  File &amp;quot;test_sele.py&amp;quot;, line 9, in &amp;lt;module&amp;gt;
    browser = webdriver.Firefox()
  File &amp;quot;/usr/local/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py&amp;quot;, line 142, in __init__
    self.service.start()
  File &amp;quot;/usr/local/lib/python3.5/site-packages/selenium/webdriver/common/service.py&amp;quot;, line 81, in start
    os.path.basename(self.path), self.start_error_message)
selenium.common.exceptions.WebDriverException: Message: &amp;apos;geckodriver&amp;apos; executable needs to be in PATH. 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After that, If you are using python as I do, you can install &lt;a href=&quot;https://pypi.python.org/pypi/PyVirtualDisplay&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PyVirtualDisplay&lt;/a&gt;, If you are not using python, you can try this solution by &lt;a href=&quot;https://stackoverflow.com/questions/6183276/how-do-i-run-selenium-in-xvfb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A.J&lt;/a&gt;, now your code should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from pyvirtualdisplay import Display
from selenium import webdriver

display = Display(visible=0, size=(1024, 800))
display.start()

browser = webdriver.Firefox()
browser.get(&amp;apos;http://www.bing.com&amp;apos;)
print(browser.title)
assert(&amp;apos;Bing&amp;apos; in browser.title)
browser.quit()

display.stop()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Everything should work now(finally :&amp;lt;), Although you now can run the test, but still hard to debug without GUI, this is tips to get the error message in javascript, add &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
window.onerror=function(msg){
    $(&amp;quot;body&amp;quot;).attr(&amp;quot;JSError&amp;quot;,msg);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to your html file, then in your test.py&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;body = self.browser.find_element_by_tag_name(&amp;apos;body&amp;apos;)
print(body.get_attribute(&amp;quot;JSError&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you know the javascript error when you run the test even if you don’t have GUI. &lt;/p&gt;
&lt;h3 id=&quot;Finally-use-docker-remote-webdriver&quot;&gt;&lt;a href=&quot;#Finally-use-docker-remote-webdriver&quot; class=&quot;headerlink&quot; title=&quot;Finally, use docker remote webdriver!&quot;&gt;&lt;/a&gt;Finally, use docker remote webdriver!&lt;/h3&gt;&lt;p&gt;Docker is great, docker images installed all stuff you need and you just need to connetc it then it work. Wait, if you not care about the port or the network connecting, it will become devil.You may have a look at &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/zalando/zalenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zalenium&lt;/a&gt;(video recording) &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker-selenium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since zalenium have video recording, so I choose it. you should add –network in the docker run command, you can find the network by&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker inspect your_container_id | grep -i -B 5 IPAMConfig
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -ti --name zalenium --network=unicooo_default -p 4444:4444 -p 5555:5555     -v /var/run/docker.sock:/var/run/docker.sock  -e DOCKER=1.11 -v /tmp/videos:/Users/windson/learn/video  dosel/zalenium start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I’m using django for my project, and django have a StaticLiveServerTestCase which create a another server in port 8081 in default, so I run test like this &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python manage.py test django_test --liveserver=localhost:8081
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;in django_test.py:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class BaseTestStaticLiveServerTestCase(StaticLiveServerTestCase):

    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Remote(
            command_executor=&amp;apos;http://zalenium:4444/wd/hub&amp;apos;,
            desired_capabilities=DesiredCapabilities.FIREFOX)
        cls.brower_size = cls.driver.get_window_size()
        cls.live_server_url = &amp;apos;http://web:8081&amp;apos;
        super(BaseTestStaticLiveServerTestCase, cls).setUpClass()

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()
        super(BaseTestStaticLiveServerTestCase, cls).tearDownClass()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Happy coding!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;TL-DR&quot;&gt;&lt;a href=&quot;#TL-DR&quot; class=&quot;headerlink&quot; title=&quot;TL;DR&quot;&gt;&lt;/a&gt;TL;DR&lt;/h3&gt;&lt;p&gt;Use &lt;a href=&quot;https://github.com/zalando/zalenium&quot; target=&quot;
    
    </summary>
    
    
      <category term="selenium django docker" scheme="https://windsooon.github.io/tags/selenium-django-docker/"/>
    
  </entry>
  
  <entry>
    <title>What Bayes theorem tell us</title>
    <link href="https://windsooon.github.io/2017/03/31/What%20Bayes'theorem%20tell%20us/"/>
    <id>https://windsooon.github.io/2017/03/31/What Bayes'theorem tell us/</id>
    <published>2017-03-31T14:46:22.000Z</published>
    <updated>2017-03-31T14:46:22.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;What-Bayes-theorem-tell-us&quot;&gt;&lt;a href=&quot;#What-Bayes-theorem-tell-us&quot; class=&quot;headerlink&quot; title=&quot;What-Bayes theorem tell us&quot;&gt;&lt;/a&gt;What-Bayes theorem tell us&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Windsooon/What-Bayes-tell-us-/blob/master/README_CHINESE.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;###If a person is infected by the disease, the probability of a positive test result will be 90%. However, if someone is not infected, there still will have 9% chances to get the positive result. We have already known that the prevalence of this disease is 1%. &lt;/p&gt;
&lt;p&gt;##If I am tested to be positive, what is the probability of getting a true infection?&lt;/p&gt;
&lt;p&gt;##70%?&lt;/p&gt;
&lt;p&gt;##60%?&lt;/p&gt;
&lt;p&gt;##50%?&lt;/p&gt;
&lt;p&gt;##40%?&lt;/p&gt;
&lt;p&gt;##10%?&lt;/p&gt;
&lt;h2 id=&quot;Answer&quot;&gt;&lt;a href=&quot;#Answer&quot; class=&quot;headerlink&quot; title=&quot;Answer&quot;&gt;&lt;/a&gt;Answer&lt;/h2&gt;&lt;p&gt;Just &lt;strong&gt;9%&lt;/strong&gt;, the key is not the reliability of the test but the prevalence of this disease&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/What-Bayes-tell-us-/master/img/90_9.png&quot; alt=&quot;90_9&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the prevalence of this disease&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of true positive&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;9.17%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;16.95%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;23.62%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;6%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;38.96%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;9%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;49.72%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;12%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;57.69%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;15%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;63.83%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;18%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;68.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;21%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;72.66%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;24%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;75.95%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;27%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;78.72%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;30%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;81.08%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;33%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;83.12%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;36%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;84.91%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;39%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;86.47%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;42%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;87.87%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;89.11%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90.23%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;51%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;91.23%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;54%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;92.15%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;57%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;92.99%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;60%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93.75%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;63%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;94.45%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;66%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;69%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;72%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.26%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;75%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.77%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;78%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.26%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;81%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.71%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;84%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.13%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;87%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.53%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.25%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.59%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of a positive test result if infected&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of a positive test result if not infected&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/What-Bayes-tell-us-/master/img/90_3.png&quot; alt=&quot;90_3&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the prevalence of this disease&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of true positive &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;23.26%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;37.97%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48.13%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;6%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;65.69%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;9%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;74.79%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;12%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;80.36%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;15%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;84.11%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;18%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;86.82%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;21%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;88.86%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;24%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90.45%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;27%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;91.73%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;30%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;92.78%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;33%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93.66%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;36%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;94.41%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;39%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.04%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;42%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.09%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.51%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;51%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;54%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.24%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;57%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.55%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;60%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.83%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;63%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.08%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;66%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.31%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;69%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.52%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;72%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.72%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;75%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;78%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.07%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;81%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.22%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;84%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.37%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;87%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.5%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.63%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.75%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.86%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.97%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of a positive test result if infected&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of a positive test result if not infected&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;80%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Windsooon/What-Bayes-tell-us-/master/img/80_3.png&quot; alt=&quot;80_3&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the prevalence of this disease&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;the probability of true positive &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;23.26%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;37.97%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;3%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;6%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;62.99%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;9%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;72.51%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;12%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;78.43%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;15%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;82.47%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;18%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;85.41%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;21%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;87.64%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;24%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;89.39%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;27%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90.79%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;30%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;91.95%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;33%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;92.93%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;36%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93.75%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;39%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;94.46%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;42%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.08%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;95.62%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;51%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.52%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;54%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;57%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.25%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;60%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.56%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;63%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;97.85%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;66%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;69%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.34%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;72%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.56%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;75%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.77%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;78%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;98.95%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;81%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.13%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;84%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.29%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;87%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.44%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;90%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.59%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;93%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.72%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;96%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.84%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99%&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;99.96%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;Thank-you&quot;&gt;&lt;a href=&quot;#Thank-you&quot; class=&quot;headerlink&quot; title=&quot;Thank you&quot;&gt;&lt;/a&gt;Thank you&lt;/h2&gt;&lt;h3 id=&quot;inspired-by-Head-First-Data-Analysis&quot;&gt;&lt;a href=&quot;#inspired-by-Head-First-Data-Analysis&quot; class=&quot;headerlink&quot; title=&quot;inspired by Head First Data Analysis&quot;&gt;&lt;/a&gt;inspired by &lt;a href=&quot;https://www.amazon.com/Head-First-Data-Analysis-statistics/dp/0596153937&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Head First Data Analysis&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;wanqic-for-englist-translation&quot;&gt;&lt;a href=&quot;#wanqic-for-englist-translation&quot; class=&quot;headerlink&quot; title=&quot;@wanqic for englist translation&quot;&gt;&lt;/a&gt;@wanqic for englist translation&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;What-Bayes-theorem-tell-us&quot;&gt;&lt;a href=&quot;#What-Bayes-theorem-tell-us&quot; class=&quot;headerlink&quot; title=&quot;What-Bayes theorem tell us&quot;&gt;&lt;/a&gt;What-Bay
    
    </summary>
    
    
  </entry>
  
</feed>
